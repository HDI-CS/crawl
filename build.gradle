plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}
ext {
    springCloudVersion = "2025.0.0"
}

group = 'kr.co'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Selenium
	implementation 'org.seleniumhq.selenium:selenium-java:4.24.0'

	// WebDriverManager
	implementation 'io.github.bonigarcia:webdrivermanager:5.9.2'

    // DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.0"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

    // p6spy
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'

    // API
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.apache.poi:poi-ooxml:5.2.3'
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

tasks.named('test') {
	useJUnitPlatform()
}


// QueryDSL 세팅
def querydslGenerated = layout.buildDirectory.dir("generated/querydsl").get().asFile
sourceSets {
    main {
        java {
            srcDirs += querydslGenerated
        }
    }
}

// QueryDSL annotation processor 설정
tasks.named('compileJava') {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslGenerated)
}
